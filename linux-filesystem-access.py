import pyinotify

# Define the event handler for file system events
class EventHandler(pyinotify.ProcessEvent):
    def process_IN_ACCESS(self, event):
        print(f"File accessed: {event.pathname}")
    
    def process_IN_MODIFY(self, event):
        print(f"File modified: {event.pathname}")
    
    def process_IN_CREATE(self, event):
        print(f"File created: {event.pathname}")
    
    def process_IN_DELETE(self, event):
        print(f"File deleted: {event.pathname}")

# Create a new watch manager and notifier
wm = pyinotify.WatchManager()
notifier = pyinotify.Notifier(wm, EventHandler())

# Add a watch for the directory you want to monitor
watch_path = "/path/to/directory"
mask = pyinotify.IN_ACCESS | pyinotify.IN_MODIFY | pyinotify.IN_CREATE | pyinotify.IN_DELETE
wm.add_watch(watch_path, mask)

# Start the notifier to monitor file system events
notifier.loop()
