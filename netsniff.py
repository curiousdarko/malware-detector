# mid ass network sniffer
# basically wireshark clone but my school blocks wireshark ðŸ’€
# got to use this instead
# REQUIRES WINPCAP, INSTALL AT WINPCAP.ORG 

from scapy.all import *

# Define a function to analyze DNS packets
def analyze_dns(pkt):
    if pkt.haslayer(DNS):
        # Extract the domain name being queried
        domain = pkt[DNS].qd.qname.decode('utf-8')
        print(f"DNS query detected: {domain}")

# Define a function to analyze HTTP packets
def analyze_http(pkt):
    if pkt.haslayer(HTTP):
        # Extract the URL being accessed
        url = pkt[HTTP].Host.decode('utf-8') + pkt[HTTP].Path.decode('utf-8')
        print(f"HTTP request detected, opinion rejected. Here is the url: {url}")

# Define a function to analyze network behavior
def analyze_network(pkt):
    # Check if the packet is a TCP packet
    if pkt.haslayer(TCP):
        # Check if the packet is a SYN packet (indicating a new connection)
        if pkt[TCP].flags == 'S':
            # Print out the source and destination IP addresses and ports
            print(f"New connection detected: {pkt[IP].src}:{pkt[TCP].sport} -> {pkt[IP].dst}:{pkt[TCP].dport}")

# Start capturing network traffic
sniff(prn=analyze_dns, filter="udp port 53", store=0)
sniff(prn=analyze_http, filter="tcp port 80 or tcp port 443", store=0)
sniff(prn=analyze_network, filter="tcp", store=0)
